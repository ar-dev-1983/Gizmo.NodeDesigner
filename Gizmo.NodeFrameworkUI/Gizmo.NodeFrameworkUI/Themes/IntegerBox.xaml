<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:Gizmo.WPF;assembly=Gizmo.WPF"
                    xmlns:local="clr-namespace:Gizmo.NodeFrameworkUI">
    <ui:HeightDivideConverter x:Key="HeightDivideConverter" />
    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}" Foreground="{DynamicResource {ComponentResourceKey ui:UITheme, DisabledWindowForegroundBrush}}" Focusable="False" />
    </DataTemplate>
    
    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type ui:UIRepeatButton}">
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, WindowForegroundBrush}}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:UIRepeatButton}">
                    <Grid>
                        <Border Background="Transparent" BorderThickness="0"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlHighlightBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, DisabledWindowForegroundBrush}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlSelectBorderBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:IntegerBox}">
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, WindowForegroundBrush}}" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IntegerBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="firstContentColumn" Width="*" />
                            <ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="PART_Background" Grid.ColumnSpan="2" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect Color="{DynamicResource {ComponentResourceKey ui:UITheme, ShadowColor}}" BlurRadius="2" Opacity="1" ShadowDepth="0"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="PART_border" Grid.ColumnSpan="2" CornerRadius="{TemplateBinding CornerRadius}" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
                        <ContentPresenter x:Name="PART_Watermark" 
                                          Content="{TemplateBinding Watermark}"
                                          ContentTemplate="{Binding WatermarkDataTemplate, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultWatermarkTemplate}}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsHitTestVisible="False"
                                          Margin="6,0,0,0" />
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                  Margin="{TemplateBinding Padding}"
                                                  Padding="{TemplateBinding Padding}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  BorderThickness="0" IsTabStop="False" ToolTip="{TemplateBinding ValidationError}" />
                        
                        <Grid x:Name="gridContent" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ui:UIRepeatButton Width="20" x:Name="PART_UpButton" Style="{StaticResource RepeatButtonStyle}"
                                                  Height="{TemplateBinding Height, Converter={StaticResource HeightDivideConverter}}" 
                                                  MinHeight="{TemplateBinding MinHeight, Converter={StaticResource HeightDivideConverter}}"
                                                  Margin="0,-1,-1,0" 
                                                  IsEnabled="{TemplateBinding IsEnabled}" IsTabStop="{TemplateBinding IsTabStop}">
                                <Path Data="M0,4 L4,0 L8,4 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ui:UIRepeatButton}}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ui:UIRepeatButton}}" StrokeThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeDashCap="Round" StrokeEndLineCap="Round"/>
                            </ui:UIRepeatButton>
                            <ui:UIRepeatButton Width="20" x:Name="PART_DownButton" Grid.Row="1" Style="{StaticResource RepeatButtonStyle}"
                                                  Height="{TemplateBinding Height, Converter={StaticResource HeightDivideConverter}}" 
                                                  MinHeight="{TemplateBinding MinHeight, Converter={StaticResource HeightDivideConverter}}" 
                                                  Margin="0,0,-1,-1"
                                                  IsEnabled="{TemplateBinding IsEnabled}" IsTabStop="{TemplateBinding IsTabStop}">
                                <Path Data="M0,0 L8,0 L4,4 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ui:UIRepeatButton}}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ui:UIRepeatButton}}"  StrokeThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeDashCap="Round" StrokeEndLineCap="Round"/>
                            </ui:UIRepeatButton>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowControlButtons" Value="False">
                            <Setter TargetName="gridContent" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="CanMoveUp" Value="False">
                            <Setter TargetName="PART_UpButton" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="CanMoveDown" Value="False">
                            <Setter TargetName="PART_DownButton" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="Watermark" Value="{x:Null}">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Flat" Value="True">
                            <Setter TargetName="PART_border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="PART_border" Property="Background" Value="Transparent" />
                            <Setter TargetName="PART_Background" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlHighlightBorderBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.1" />
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlSelectBorderBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderThickness" Value="1" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, AltOneForegroundBrush}}" />
                        </Trigger>
                        <Trigger Property="IsValidationError" Value="True">
                            <Setter TargetName="PART_border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="Red" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, DisabledWindowForegroundBrush}}" />
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.8" />
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlBackgroundBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ui:UITheme, ControlBackgroundBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey ui:UITheme, DisabledWindowForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>