<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:Gizmo.WPF;assembly=Gizmo.WPF"
                    xmlns:local="clr-namespace:Gizmo.NodeFrameworkUI">
    
    <local:DoubleToTextConverter x:Key="doubleToTextConverter"/>
    <local:VariableWrapperOrientationToAlignmentConverter x:Key="orientationToAlignmentConverter"/>
    <local:VariableWrapperOrientationToTextAlignmentConverter x:Key="orientationToTextAlignmentConverter"/>
    <local:VariableConverter x:Key="variableConverter"/>
    
    <ControlTemplate x:Key="VariableWrapperEditable" TargetType="{x:Type local:VariableWrapper}">
        <Grid x:Name="PART_Grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" 
                    x:Name="PART_ConnectionPointBorder"
                    VerticalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=V}"
                    HorizontalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=H}"
                    Cursor="Cross" 
                    Background="Transparent" 
                    Margin="4" 
                    Width="12" 
                    Height="12"
                    IsHitTestVisible="True"
                    BorderThickness="1" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    CornerRadius="14"/>
            
            <ContentPresenter Grid.Column="1"
                              x:Name="PART_Content" 
                              Content="{TemplateBinding Content}" 
                              VerticalAlignment="Center"/>
            
            <TextBlock  Grid.Column="2"
                        IsHitTestVisible="False" x:Name="PART_Name" Margin="2,1,2,1" Focusable="False"
                        VerticalAlignment="Center"
                        HorizontalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=H}"
                        TextAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToTextAlignmentConverter},ConverterParameter=HO}"
                        Text="{Binding Variable.Name, RelativeSource={RelativeSource Mode=TemplatedParent}, BindsDirectlyToSource=True}"
                        Foreground="{DynamicResource {ComponentResourceKey ui:UITheme, WindoweForegroundBrush}}" FontSize="10pt"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Left">
                <Setter TargetName="PART_Name"  Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_Content"  Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="Orientation" Value="Right">
                <Setter TargetName="PART_Name"  Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_Content"  Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Grid.Column" Value="2" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter TargetName="PART_Content" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ShowName" Value="True">
                <Setter TargetName="PART_Name"  Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ShowName" Value="False">
                <Setter TargetName="PART_Name"  Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolboxMode" Value="True">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Arrow" />
            </Trigger>
            <Trigger Property="ToolboxMode" Value="False">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Cross" />
            </Trigger>
            <Trigger Property="DesignMode" Value="False">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Arrow" />
            </Trigger>
            <Trigger Property="DesignMode" Value="True">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Cross" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="VariableWrapperNormal" TargetType="{x:Type local:VariableWrapper}">
        <Grid x:Name="PART_Grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="PART_ConnectionPointBorder"
                    VerticalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=V}"
                    HorizontalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=H}"
                    Cursor="Cross" 
                    Background="Transparent" 
                    Margin="4" 
                    Width="12" 
                    Height="12"
                    IsHitTestVisible="True"
                    BorderThickness="1" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    CornerRadius="14"/>
            <ContentPresenter x:Name="PART_Content" Content="{TemplateBinding Content}" Grid.Column="1" VerticalAlignment="Center"/>
            <TextBlock  IsHitTestVisible="False" x:Name="PART_Name" Margin="2,1,2,1" Focusable="False" Grid.Column="1"
                       VerticalAlignment="Center"
                       HorizontalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=H}" 
                       TextAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToTextAlignmentConverter},ConverterParameter=HO}"
                       Text="{Binding Variable.Name, RelativeSource={RelativeSource Mode=TemplatedParent}, BindsDirectlyToSource=True}"
                       Foreground="{DynamicResource {ComponentResourceKey ui:UITheme, WindowForegroundBrush}}" FontSize="10pt"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Left">
                <Setter TargetName="PART_Name"  Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="Orientation" Value="Right">
                <Setter TargetName="PART_Name"  Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Grid.Column" Value="1" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter TargetName="PART_Content" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ShowName" Value="True">
                <Setter TargetName="PART_Name"  Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ShowName" Value="False">
                <Setter TargetName="PART_Name"  Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolboxMode" Value="True">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Arrow" />
            </Trigger>
            <Trigger Property="ToolboxMode" Value="False">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Cross" />
            </Trigger>
            <Trigger Property="DesignMode" Value="False">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Arrow" />
            </Trigger>
            <Trigger Property="DesignMode" Value="True">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Cross" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="VariableWrapperDataValue" TargetType="{x:Type local:VariableWrapper}">
        <Grid x:Name="PART_Grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
                <ColumnDefinition MinWidth="0" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="PART_ConnectionPointBorder"
                    VerticalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=V}"
                    HorizontalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=H}"
                    Cursor="Cross" 
                    Background="Transparent" 
                    Margin="4" 
                    Width="12" 
                    Height="12"
                    IsHitTestVisible="True"
                    BorderThickness="1" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    CornerRadius="14"/>
            <TextBlock  IsHitTestVisible="False" 
                        x:Name="PART_Value" 
                        Margin="2,1,2,1" Focusable="False" Grid.Column="1"  
                        VerticalAlignment="Center" MaxWidth="{Binding ElementName=PART_Grid, Path=ActualWidth}"
                        Text="{Binding Variable.Value, RelativeSource={RelativeSource Mode=TemplatedParent}, BindsDirectlyToSource=True}" TextTrimming="CharacterEllipsis"
                        Foreground="{DynamicResource {ComponentResourceKey ui:UITheme, WindoweForegroundBrush}}" FontSize="10pt"/>
            <TextBlock  IsHitTestVisible="False" x:Name="PART_Name" Margin="2,1,2,1" Focusable="False" Grid.Column="2"
                       VerticalAlignment="Center"
                       HorizontalAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToAlignmentConverter},ConverterParameter=H}" 
                       TextAlignment="{TemplateBinding Orientation, Converter={StaticResource orientationToTextAlignmentConverter},ConverterParameter=HO}"
                       Text="{Binding Variable.Name, RelativeSource={RelativeSource Mode=TemplatedParent}, BindsDirectlyToSource=True}"
                       Foreground="{DynamicResource {ComponentResourceKey ui:UITheme, WindowForegroundBrush}}" FontSize="10pt"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Left">
                <Setter TargetName="PART_Name"  Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_Value"  Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="Orientation" Value="Right">
                <Setter TargetName="PART_Name"  Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_Value"  Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Grid.Column" Value="2" />
            </Trigger>
            <Trigger Property="ShowName" Value="True">
                <Setter TargetName="PART_Name"  Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ShowName" Value="False">
                <Setter TargetName="PART_Name"  Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolboxMode" Value="True">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Arrow" />
            </Trigger>
            <Trigger Property="ToolboxMode" Value="False">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Cross" />
            </Trigger>
            <Trigger Property="DesignMode" Value="False">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Arrow" />
            </Trigger>
            <Trigger Property="DesignMode" Value="True">
                <Setter TargetName="PART_ConnectionPointBorder"  Property="Cursor" Value="Cross" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:VariableWrapper}">
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UINodeTheme, LinkBorderBrush}}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="false"/>
                    <Condition Property="ShowValue" Value="true"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource VariableWrapperDataValue}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="false"/>
                    <Condition Property="ShowValue" Value="false"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource VariableWrapperNormal}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Template" Value="{StaticResource VariableWrapperEditable}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>